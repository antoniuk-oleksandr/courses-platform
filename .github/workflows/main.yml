name: CI/CD Pipeline
on:
  push:
    branches:
      - "develop"
      - "features/*"
  pull_request:
    branches:
      - "develop"
      - "features/*"
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: test_db
          POSTGRES_PASSWORD: test_db
          POSTGRES_DB: test_db
        ports:
          - 5431:5432

    env:
      DATABASE_URL: postgres://test_db:test_db@localhost:5431/test_db
      NODE_ENV: test
      JWT_SECRET: test_secret
      MIGRATE: ${{ vars.MIGRATE || 'false' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24.5"

      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Install dependencies
        working-directory: ./app
        run: pnpm install

      - name: Run tests
        working-directory: ./app
        run: pnpm run test:ci/cd

      - name: Run migrations (if enabled)
        if: ${{ env.MIGRATE == 'true' }}
        working-directory: ./app
        run: DATABASE_URL=${{ secrets.DATABASE_URL }} npx prisma migrate deploy

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: antoniuk-oleksandr/courses-platform

      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
