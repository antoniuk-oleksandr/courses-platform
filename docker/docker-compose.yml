version: '3.8'

services:
  psql_db:
    image: postgres:17-alpine
    container_name: courses-platform-psql-db
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - "../database/psql:/var/lib/postgresql/data"
    networks:
      - backend
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  test_psql_db:
    image: postgres:17-alpine
    container_name: courses-platform-test-psql-db
    restart: unless-stopped
    ports:
      - "${TEST_POSTGRES_PORT}:5432"
    volumes:
      - "../database/test-psql:/var/lib/postgresql/data"
    networks:
      - backend
    environment:
      POSTGRES_USER: ${TEST_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TEST_POSTGRES_DB}

  redis_db:
    image: redis:latest
    container_name: courses-platform-redis-db
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  test_redis_db:
    image: redis:latest
    container_name: courses-platform-test-redis-db
    restart: unless-stopped
    ports:
      - "${TEST_REDIS_PORT}:6379"
    networks:
      - backend
    command: ["redis-server", "--requirepass", "${TEST_REDIS_PASSWORD}"]

  # node_app:
  #   image: courses-platform-node-app
  #   container_name: courses-platform-node-app
  #   environment:
  #     PORT: 8080
  #     DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@psql_db:${POSTGRES_PORT}/${POSTGRES_DB}"
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - psql_db
  #   networks:
  #     - backend

volumes:
  database:

networks:
  backend:
